# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

jobs:
  - job:

    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: vscode-package
          path: $(Build.SourcesDirectory)

      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: vscode-che-package
          path: $(Build.SourcesDirectory)

      - bash: |
          set -ev
          export tag=$(git tag --sort=-creatordate | head -n 1)
          echo "##vso[task.setvariable variable=github_tag] $tag"
        displayName: Get github tag

      - task: GitHubRelease@1
        inputs:
          gitHubConnection: 'github.com_cazfletch'
          repositoryName: '$(Build.Repository.Name)'
          action: 'edit'
          tag: '$(github_tag)'
          target: '$(Build.SourceVersion)'
          assetUploadMode: 'replace'
          isPreRelease: true
          addChangeLog: false
          assets: |
            $(Build.SourcesDirectory)/ibm-blockchain-platform-*.vsix
            $(Build.SourcesDirectory)/ibm-blockchain-platform-*.yaml

      - bash: |
          set -ev
          npm install vsce
          git checkout package.json
          node ./node_modules/vsce/out/vsce publish -p $(VSCETOKEN) --packagePath ibm-blockchain-platform-1*
        displayName: Publish extension
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v1'))


      - script: |
          set -ex
          npm install dateformat
          git checkout package.json
          cd ./packages/blockchain-extension
          npm run checkReleaseNotes
        displayName: Check release notes
        condition: succeeded()

      - script: |
          set -ex
          git config --global user.name $(GITHUB_USER_NAME)
          git config --global user.email $(GITHUB_USER_EMAIL)
        displayName: Set GitHub user name and email
        condition: succeeded()

      - script: |
          set -ex
          npm install lerna
          git checkout package.json
          node ./node_modules/lerna/cli.js version patch --yes --no-git-tag-version
        displayName: Use lerna to bump version
        condition: succeeded()

      - script: |
          set -ex
          VERSION=$(jq -r ".version" ./packages/blockchain-extension/package.json)
          git commit -asm "Automatic version bump to ${VERSION}"
        displayName: Commit version bump
        condition: succeeded()

      - script: |
          set -ex

          if [[ $(Build.SourceBranchName) == v1* ]]; then
            export branch_name=master
          else
            export branch_name=v2
          fi

          git -c http.extraheader="Authorization: Basic $(GITHUB_BASIC_AUTH)" push $(Build.Repository.Uri) HEAD:$branch_name -f
        displayName: Push commit to GitHub
        condition: succeeded()
