# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

parameters:
  - name: type

steps:
  - bash: |
      set -ev
      cd ./packages/blockchain-extension
      ./cucumber/hlfv1/start.sh
      echo ${{ parameters.type }}
    displayName: Setup Fabric
    condition: and(succeeded(), eq(variables['OTHER_FABRIC'], 'true'))

  - task: DownloadSecureFile@1
    name: Ordering_Org_Saas_Admin
    inputs:
      secureFile: Ordering Org Saas Admin.json
    condition: and(succeeded(), eq(variables['OPSTOOLS_FABRIC'], 'true'))

  - task: DownloadSecureFile@1
    name: Ordering_Org_Saas_CA_Admin
    inputs:
      secureFile: Ordering Org Saas CA Admin.json
    condition: and(succeeded(), eq(variables['OPSTOOLS_FABRIC'], 'true'))

  - task: DownloadSecureFile@1
    name: Org1_CA_Saas_Admin
    inputs:
      secureFile: Org1 CA Saas Admin.json
    condition: and(succeeded(), eq(variables['OPSTOOLS_FABRIC'], 'true'))

  - task: DownloadSecureFile@1
    name: Org1Saas_Admin
    inputs:
      secureFile: Org1Saas Admin.json
    condition: and(succeeded(), eq(variables['OPSTOOLS_FABRIC'], 'true'))

  - task: DownloadSecureFile@1
    name: Org2_CA_Saas_Admin
    inputs:
      secureFile: Org2 CA Saas Admin.json
    condition: and(succeeded(), eq(variables['OPSTOOLS_FABRIC'], 'true'))

  - task: DownloadSecureFile@1
    name: Org2Saas_Admin
    inputs:
      secureFile: Org2Saas Admin.json
    condition: and(succeeded(), eq(variables['OPSTOOLS_FABRIC'], 'true'))

  - bash: |
      set -ev
      cd ./packages/blockchain-fabric-admin
      ./cucumber/setup-tests.sh
    displayName: Setup Fabric Admin Fabric
    condition: and(succeeded(), eq(variables['FABRIC_ADMIN'], 'true'))

  - bash: |
      set -ev
      cd ./packages/blockchain-extension
      echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      npm run cucumber -- $(opsTools_url) $(opsTools_key) $(opsTools_secret) $(opsTools_SaaS_api_key)
    env:
      DISPLAY: ':99.0'
      JSON_DIR: $(Agent.TempDirectory)
    displayName: Run cucumber tests
    condition: and(succeeded(), ne(variables['FABRIC_ADMIN'], 'true'))

  - bash: |
      set -ev
      cd ./packages/blockchain-fabric-admin
      npm run cucumber
    env:
      DISPLAY: ':99.0'
    displayName: Run fabric admin cucumber tests
    condition: and(succeeded(), eq(variables['FABRIC_ADMIN'], 'true'))

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/packages/blockchain-extension/cucumber/report'
      contents: "**"
      targetFolder: '$(Build.ArtifactStagingDirectory)'
    condition: and(succeeded(), ne(variables['FABRIC_ADMIN'], 'true'))

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'cucumber-${{ parameters.type }}-report'
    condition: and(succeeded(), ne(variables['FABRIC_ADMIN'], 'true'))
