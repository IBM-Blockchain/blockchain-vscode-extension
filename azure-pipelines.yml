schedules:
  - cron: "0 0 * * *"
    displayName: Daily insiders build
    branches:
      include:
        - master
    always: true

trigger:
  tags:
    include:
      - '*'

stages:
  - stage: unitTest
    condition: in(variables['Build.Reason'], 'PullRequest', 'IndividualCI')
    dependsOn: []
    jobs:
      - job: unit
        strategy:
          matrix:
            linux:
              imageName: 'ubuntu-16.04'
              VERSION: '1.35.1'
              MODULES: 64
              ELECTRON: '3.0'
              TARGET: '3.0.0'
            mac:
              imageName: 'macos-10.14'
              VERSION: '1.35.1'
              MODULES: 64
              ELECTRON: '3.0'
              TARGET: '3.0.0'
        pool:
          vmImage: $(imageName)

        steps:
          - template: azure-templates/setup-steps.yml
          - template: azure-templates/unit-test-steps.yml
          - template: azure-templates/rebuild-steps.yml
          - template: azure-templates/extension-unit-test-steps.yml

  - stage: cucumberTest
    condition: in(variables['Build.Reason'], 'PullRequest', 'IndividualCI')
    dependsOn: []

    jobs:
      - job: cucumber
        condition: eq(variables['Build.Reason'], 'PullRequest')
        strategy:
          matrix:
            cucumber:
              imageName: 'ubuntu-16.04'
              VERSION: '1.39.2'
            cucumber_other:
              imageName: 'ubuntu-16.04'
              OTHER_FABRIC: 'true'
              VERSION: '1.39.2'
            cucumber_ansible:
              imageName: 'ubuntu-16.04'
              ANSIBLE_FABRIC: 'true'
              VERSION: '1.39.2'
            cucumber_opsTools:
              imageName: 'ubuntu-16.04'
              OPSTOOLS_FABRIC: 'true'
              VERSION: '1.39.2'
            cucumber_two_org:
              imageName: 'ubuntu-16.04'
              TWO_ORG_FABRIC: 'true'
              VERSION: '1.39.2'

        pool:
          vmImage: $(imageName)

        steps:
          - template: azure-templates/setup-steps.yml
          - template: azure-templates/cucumber-steps.yml

      - job: cucumberLatest
        condition: startsWith(variables['Build.SourceBranch'], 'refs/tags')
        strategy:
          matrix:
            cucumber:
              imageName: 'ubuntu-16.04'
            cucumber_other:
              imageName: 'ubuntu-16.04'
              OTHER_FABRIC: 'true'
            cucumber_ansible:
              imageName: 'ubuntu-16.04'
              ANSIBLE_FABRIC: 'true'
            cucumber_opsTools:
              imageName: 'ubuntu-16.04'
              OPSTOOLS_FABRIC: 'true'
            cucumber_two_org:
              imageName: 'ubuntu-16.04'
              TWO_ORG_FABRIC: 'true'

        pool:
          vmImage: $(imageName)

        steps:
          - template: azure-templates/setup-steps.yml
          - template: azure-templates/cucumber-steps.yml

  - stage: cypressTest
    condition: in(variables['Build.Reason'], 'PullRequest', 'IndividualCI')
    dependsOn: []
    jobs:
      - job: cypress
        strategy:
          matrix:
            linux:
              imageName: 'ubuntu-16.04'
              VERSION: '1.35.1'
              MODULES: 64
              ELECTRON: '3.0'
              TARGET: '3.0.0'
            mac:
              imageName: 'macos-10.14'
              VERSION: '1.35.1'
              MODULES: 64
              ELECTRON: '3.0'
              TARGET: '3.0.0'
        pool:
          vmImage: $(imageName)

        steps:
          - template: azure-templates/setup-steps.yml
          - template: azure-templates/rebuild-steps.yml
          - template: azure-templates/cypress-steps.yml

  - stage: buildPackage
    dependsOn:
      - unitTest
      - cucumberTest
      - cypressTest
    jobs:
      - job: buildPackage

        pool:
          vmImage: 'ubuntu-16.04'

        steps:
          - template: azure-templates/setup-steps.yml
          - template: azure-templates/build-package.yml

  - stage: buildChePackage
    dependsOn:
      - unitTest
      - cucumberTest
      - cypressTest
    jobs:
      - job: buildChePackage
        pool:
          vmImage: ubuntu-16.04
        steps:
          - script: che/build.sh
            displayName: Build Che package
          - task: CopyFiles@2
            inputs:
              sourceFolder: '$(Build.SourcesDirectory)/che'
              contents: |
                ibm-blockchain-platform-*.vsix
                ibm-blockchain-platform-*.yaml
              targetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: vscode-che-package

  - stage: deploy
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
    dependsOn:
      - unitTest
      - cucumberTest
      - cypressTest
      - buildPackage
      - buildChePackage
    jobs:
      - job:
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - template: azure-templates/deploy.yml

  - stage: otherVersionsUnitTest
    condition: eq(variables['Build.Reason'], 'Schedule')
    dependsOn: []
    jobs:
      - job: unit
        strategy:
          matrix:
            insiders_linux:
              imageName: 'ubuntu-16.04'
              VERSION: 'insiders'
              MODULES: 75
              ELECTRON: '7.1'
              TARGET: '7.1.7'
            insiders_mac:
              imageName: 'macos-10.14'
              VERSION: 'insiders'
              MODULES: 75
              ELECTRON: '7.1'
              TARGET: '7.1.7'
        pool:
          vmImage: $(imageName)

        steps:
          - template: azure-templates/setup-steps.yml
          - template: azure-templates/unit-test-steps.yml
          - template: azure-templates/rebuild-steps.yml
          - template: azure-templates/extension-unit-test-steps.yml

  - stage: otherVersionsCucumberTest
    condition: eq(variables['Build.Reason'], 'Schedule')
    dependsOn: []
    jobs:
      - job: cucumber
        strategy:
          matrix:
            insiders_cucumber:
              imageName: 'ubuntu-16.04'
              VERSION: 'insiders'
            insiders_cucumber_other:
              imageName: 'ubuntu-16.04'
              OTHER_FABRIC: 'true'
              VERSION: 'insiders'
            insiders_cucumber_ansible:
              imageName: 'ubuntu-16.04'
              ANSIBLE_FABRIC: 'true'
              VERSION: 'insiders'
            insiders_cucumber_opsTools:
              imageName: 'ubuntu-16.04'
              OPSTOOLS_FABRIC: 'true'
              VERSION: 'insiders'
            insiders_cucumber_two_org:
              imageName: 'ubuntu-16.04'
              TWO_ORG_FABRIC: 'true'
              VERSION: 'insiders'
            old_cucumber:
              imageName: 'ubuntu-16.04'
              VERSION: '1.38.1'
            old_cucumber_other:
              imageName: 'ubuntu-16.04'
              OTHER_FABRIC: 'true'
              VERSION: '1.38.1'
            old_cucumber_ansible:
              imageName: 'ubuntu-16.04'
              ANSIBLE_FABRIC: 'true'
              VERSION: '1.38.1'
            old_cucumber_two_org:
              imageName: 'ubuntu-16.04'
              TWO_ORG_FABRIC: 'true'
              VERSION: '1.38.1'
            old_cucumber_opsTools:
              imageName: 'ubuntu-16.04'
              OPSTOOLS_FABRIC: 'true'
              VERSION: '1.38.1'
            latest_cucumber:
              imageName: 'ubuntu-16.04'
            latest_cucumber_other:
              imageName: 'ubuntu-16.04'
              OTHER_FABRIC: 'true'
            latest_cucumber_ansible:
              imageName: 'ubuntu-16.04'
              ANSIBLE_FABRIC: 'true'
            lateat_cucumber_opsTools:
              imageName: 'ubuntu-16.04'
              OPSTOOLS_FABRIC: 'true'
            latest_cucumber_two_org:
              imageName: 'ubuntu-16.04'
              TWO_ORG_FABRIC: 'true'
        pool:
          vmImage: $(imageName)

        steps:
          - template: azure-templates/setup-steps.yml
          - template: azure-templates/cucumber-steps.yml
  # - stage: docker
  #   dependsOn:
  #     - unitTest
  #     - cucumberTest
  #     - cypressTest
  #   jobs:
  #     - job: docker
  #       pool:
  #         vmImage: ubuntu-16.04
  #       steps:
  #         - script: docker/build.sh
  #           displayName: Build Docker image
  #         - script: |
  #             set -ex
  #             VERSION=$(jq -r ".version" ./packages/blockchain-extension/package.json)
  #             docker tag ibmblockchain/vscode:latest ibmblockchain/vscode:${VERSION}
  #             echo docker push ibmblockchain/vscode:${VERSION}
  #             echo docker push ibmblockchain/vscode:latest
  #           condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
  #           displayName: Push Docker image to Docker Hub (release build)
  #         - script: |
  #             set -ex
  #             docker tag ibmblockchain/vscode:latest ibmblockchain/vscode:unstable
  #             echo docker push ibmblockchain/vscode:unstable
  #           condition: eq(variables['Build.Reason'], 'Schedule')
  #           displayName: Push Docker image to Docker Hub (nightly build)
