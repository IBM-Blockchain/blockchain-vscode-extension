{
    "name": "ibm-blockchain-platform-ui",
    "displayName": "IBM Blockchain Platform UI",
    "description": "End to end extension for Hyperledger Fabric developers. Develop and test your blockchain smart contracts and client applications on your local machine, and package your projects for deployment into IBM Blockchain Platform runtimes.",
    "author": "IBMBlockchain",
    "keywords": [
        "blockchain",
        "smart contracts",
        "distributed ledger technology",
        "Hyperledger Fabric",
        "IBM Blockchain Platform"
    ],
    "homepage": "https://www.ibm.com/blockchain",
    "license": "Apache-2.0",
    "version": "1.0.18",
    "publisher": "IBMBlockchain",
    "icon": "resources/blockchain_marketplace.png",
    "galleryBanner": {
        "color": "#313131",
        "theme": "dark"
    },
    "production": false,
    "repository": {
        "type": "git",
        "url": "https://github.com/IBM-Blockchain/blockchain-vscode-extension"
    },
    "categories": [
        "Programming Languages",
        "Debuggers",
        "Other"
    ],
    "main": "./build/index.html",
    "scripts": {
        "compile": "rimraf build && npm run build",
        "watch": "rimraf build && tsc -watch -p ./tsconfig.json",
        "pretest": "npm run compile && npm run lint && npm run licchk",
        "unit": "npm run pretest && ./node_modules/.bin/jest",
        "licchk": "license-check-and-add",
        "tslint": "tslint --project tsconfig.json",
        "lint": "npm run tslint 'src/**/*.ts' 'test/**/*.test.ts'",
        "productionFlag": "node ./.azure/rewritePackageJson.js publish",
        "build": "cp ../blockchain-extension/ExtensionCommands.ts ./src/ExtensionCommands.ts && ./scripts/build-non-split.js && tsc -p tsconfig.json",
        "cypress": "cypress open",
        "cypressCli": "cypress run",
        "start": "react-scripts start",
        "createModule": "npm pack"
    },
    "devDependencies": {
        "@bahmutov/add-typescript-to-cypress": "^2.1.2",
        "@carbon/grid": "^10.6.0",
        "@carbon/themes": "^10.7.0",
        "@carbon/type": "^10.6.0",
        "@types/carbon-components-react": "^7.6.2",
        "@types/chai": "4.1.4",
        "@types/chai-as-promised": "7.1.0",
        "@types/enzyme": "^3.10.3",
        "@types/enzyme-adapter-react-16": "^1.0.5",
        "@types/fs-extra": "5.0.4",
        "@types/glob": "5.0.35",
        "@types/jest": "^23.3.13",
        "@types/mocha": "5.2.5",
        "@types/react": "^16.3.14",
        "@types/react-dom": "^16.0.5",
        "@types/react-router-dom": "^4.3.5",
        "@types/react-test-renderer": "^16.9.0",
        "@types/rimraf": "^2.0.2",
        "@types/sinon": "5.0.1",
        "@types/sinon-chai": "3.2.0",
        "angular-tslint-rules": "1.5.0",
        "carbon-components": "^10.7.2",
        "carbon-components-react": "^7.7.2",
        "carbon-icons": "^7.0.7",
        "chai": "4.1.2",
        "chai-as-promised": "7.1.1",
        "cypress": "^3.4.1",
        "decache": "4.4.0",
        "enzyme": "^3.10.0",
        "enzyme-adapter-react-16": "^1.14.0",
        "glob": "7.1.2",
        "jest-transform-css": "^2.0.0",
        "license-check-and-add": "2.3.6",
        "mocha": "^6.1.4",
        "node-sass": "^4.13.0",
        "raf": "^3.4.1",
        "react-scripts": "^3.1.1",
        "rewire": "^4.0.1",
        "rimraf": "^2.6.2",
        "sinon": "6.1.4",
        "sinon-chai": "3.2.0",
        "ts-jest": "^24.1.0",
        "ts-node": "7.0.0",
        "tslint": "5.11.0",
        "tslint-loader": "3.6.0",
        "typescript": "3.6.3"
    },
    "dependencies": {
        "fs-extra": "^7.0.1",
        "react": "^16.3.2",
        "react-dom": "^16.3.2",
        "react-router-dom": "^4.3.1"
    },
    "license-check-and-add-config": {
        "folder": ".",
        "license": "LICENSE.txt",
        "exact_paths_method": "EXCLUDE",
        "exact_paths": [
            ".env",
            "cypress",
            "enzyme",
            "public",
            "scripts",
            "src",
            "node_modules",
            ".idea",
            ".git",
            "build",
            "coverage",
            ".DS_Store",
            "CHANGELOG.md",
            "ISSUE_TEMPLATE.md",
            "LICENSE",
            "unit-tests.xml"
        ],
        "file_type_method": "EXCLUDE",
        "file_types": [
            ".txt",
            ".vsix",
            ".yml",
            ".yml",
            ".yaml",
            ".tgz",
            ".key",
            ".gz",
            ".pem",
            ".crt",
            ".tx",
            ".block",
            ".log",
            ".pid",
            ".port",
            ".feature",
            ".env"
        ],
        "insert_license": false,
        "clear_license": false,
        "license_formats": {
            "ts|acl|cto|js|qry": {
                "prepend": "/*",
                "append": "*/",
                "eachLine": {
                    "prepend": " * "
                }
            },
            "vscodeignore": {
                "eachLine": {
                    "prepend": "# "
                }
            },
            "md": {
                "file": "./markdown-license.txt"
            }
        }
    },
    "browserslist": [
        ">0.2%",
        "not dead",
        "not ie <= 11",
        "not op_mini all"
    ],
    "jest": {
        "moduleFileExtensions": [
            "ts",
            "tsx",
            "js",
            "jsx",
            "json"
        ],
        "transform": {
            "^.+\\.tsx?$": "ts-jest",
            ".+\\.(css|styl|less|sass|scss)$": "jest-transform-css"
        },
        "moduleNameMapper": {
            "^.+\\.(css|less|scss)$": "babel-jest",
            "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/enzyme/__mocks__/fileMock.js"
        },
        "testMatch": [
            "<rootDir>/enzyme/tests/*.(ts|tsx)"
        ],
        "setupFilesAfterEnv": [
            "<rootDir>/enzyme/setupTests.ts"
        ],
        "collectCoverage": true,
        "collectCoverageFrom": [
            "src/App.tsx",
            "src/components/**"
        ],
        "coverageThreshold": {
            "global": {
                "branches": 100,
                "functions": 100,
                "lines": 100,
                "statements": -1
            }
        }
    }
}
