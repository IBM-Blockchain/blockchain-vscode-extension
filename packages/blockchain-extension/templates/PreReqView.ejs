<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IBM Blockchain Platform</title>
    <style>
    @import url('../resources/fonts');

        body {
            font-family:'IBM Plex Sans', 'IBMPlexSans', Arial, Helvetica, sans-serif;
            display: flex;
            padding: 16px 0px 0px 32px;
            font-size: 14px;
            letter-spacing:0.01px;
            font-weight: 400;
            -webkit-font-smoothing: antialiased;
            -moz-font-smoothing: antialiased;
            -o-font-smoothing: antialiased;

        }

        a {
            text-decoration: none;
            font-weight: 400;
        }

        a:hover{
            text-decoration:underline;
        }

        p {
            margin-top: 4px;
            margin-bottom: 4px;
        }

        h1{
            font-size:28px;
            letter-spacing:0.02px;
            font-weight: lighter;
            font-family: 'IBMPlexSans-Light', 'IBM Plex Sans', 'IBMPlexSans', Arial, Helvetica, sans-serif;
        }

        h2 {
            font-size: 24px;
            letter-spacing:0.02px;
        }

        h3 {
            font-size: 16px;
            letter-spacing:0.06px;
        }

        #content-middle {
            margin-bottom: 2px;
        }

        ul {
            list-style-type: none;
            padding-left: 0px;
        }

        li {
            margin-bottom: 8px;
        }

        li:before {
            content: "-";
            margin-right: 8px;
            position: absolute;
        }

        li div {
            margin-left: 16px;
        }

        /*
        ##############################################
        ### Generic Styling ###
        ##############################################
        */

        #container{
            flex:1;
            display:flex;
            flex-direction:column;
        }

        #home-title{
            flex-shrink:1;
            display:flex;
            flex-direction:row;
            align-items:baseline;
            margin-bottom: 32px;
        }

        #extension-name-container{
            flex-shrink:1;
            padding-right: 16px;
        }

        #extension-name{
            display:inline;
            font-size: 36px;
            font-family: 'IBMPlexSans-Light', 'IBM Plex Sans', 'IBMPlexSans', Arial, Helvetica, sans-serif;
        }

        #extension-version-container{
            flex:1;
        }

        #extension-version{
            display: inline;
        }

        #content {
            flex:1;
            display:flex;
            flex-direction: column;
        }

        #content-top, #content-middle  {
            display: flex;
            margin-bottom: 32px;
            flex-shrink: 1;
            flex-direction: column;
        }

        #content-bottom {
            display: flex;
            flex-shrink: 1;
            flex-direction: column;
        }

        #content-top-left, #content-top-right, #content-middle-left, #content-middle-right, #content-bottom-right, #content-bottom-left {
            display: flex;
            flex: 1;

        }

        #content-bottom-left{
            display: flex;
            flex: 1;
            padding-top: 32px;
            padding-right: 48px;
        }

        #content-top-left{
            display: flex;
            flex: 1;
            flex-direction: column;
            padding-right: 48px;
        }

        #welcome-title {
            margin: 0px 0px 8px 0px;
            font-family: 'IBMPlexSans-Light', 'IBM Plex Sans', 'IBMPlexSans', Arial, Helvetica, sans-serif;
        }

        #welcome-sub-text {
            max-width: 705px;
            font-size: 16px;
            margin-top: 0;
            margin-bottom: 0;
            font-weight: 400;
            font-family: 'IBM Plex Sans', 'IBMPlexSans', Arial, Helvetica, sans-serif;
        }

        #capabilities {
            padding-right: 48px;
            font-family: 'IBM Plex Sans', 'IBMPlexSans', Arial, Helvetica, sans-serif;
            font-weight: 400;
        }

        .prereqs-header{
            flex:1;
            display:flex;
            flex-direction:row;
            align-items:baseline;
            margin-bottom: 24px;
        }

        .optional-features-container {
            flex-shrink: 1;
            display: flex;
            margin-bottom: 16px;
        }

        .optional-features-title {
            display:inline;
            font-size: 22px;
            font-weight: 400;
            font-family: 'IBMPlexSans-Light', 'IBM Plex Sans', 'IBMPlexSans', Arial, Helvetica, sans-serif;
        }

        .optional-feature {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        .feature-name {
            flex: 1;
            margin-bottom: 8px;
            font-size: 14px;
        }

        .optional-docker-description{
            margin-bottom: 16px;
            max-width: 1005px;
        }

        .switch-container {
            flex: 1;
            display: flex;
            flex-direction: row;
        }

        .switch-button {
            flex-shrink: 1;
        }

        .prereqs-title-container{
            flex-shrink:1;
            padding-right: 8px;
        }

        .prereqs-title{
            display:inline;
            font-size: 22px;
            font-weight: 400;
            font-family: 'IBMPlexSans-Light', 'IBM Plex Sans', 'IBMPlexSans', Arial, Helvetica, sans-serif;
        }

        .prereqs-number-container{
            flex-shrink:1;
            margin-right: 16px;
        }

        .prereqs-number{
            display: inline;
            font-family: 'IBM Plex Sans', 'IBMPlexSans', Arial, Helvetica, sans-serif;
            font-weight: 400;
            font-size: 16px;
        }

        #installed-table-chevron {
            width: 18px;
            height: 18px;
        }

        .hidden {
            display: none !important;
            visibility: hidden;
        }

        #prereqs-gallery{
            flex: 1;
            display: flex;
            flex-direction: row;
            max-width: 1005px;
            flex-wrap: wrap;
        }

        .panel {
            display: flex;
            flex-direction: column;
            padding: 16px;
            width: 300px;
            max-width: 300px;
            height: 165px;
            margin: 0 3px 3px 0;
            color: inherit;
            text-decoration: none;
        }

        .panel:hover{
            color: inherit;
            text-decoration: none;
        }

        .panel-header {
            display: flex;
            flex-shrink: 1;
            flex-direction: row;
            padding-bottom: 8px;
            align-items: center;
        }


        .prereq-name {
            font-size: 20px;
            flex: 1;
            display: flex;
            align-self: baseline;
            align-items: center;
        }

        .name {
            flex-shrink: 1;
        }

        .info-icon {
            width: 16px;
            height: 16px;
            margin-right: 4px;
            padding-left: 4px;
        }

        .prereq-required {
            flex-shrink: 1;
            font-size: 12px;
            letter-spacing: 0.32px;
            border-radius: 12px;
            height: 24px;
            width: 68px;
            line-height: 24px;
            text-align: center;
        }

        .installed-title {
            flex: 1;
            font-size: 14px;
        }

        .installed-version {
            flex: 1;
            font-size: 14px;
            margin-bottom: 8px;
        }

        .required-title {
            flex: 1;
            font-size: 14px;
        }

        .checkbox-text{
            font-size: 14px;
            cursor: pointer;
        }

        .required-version {
            flex: 1;
            font-size: 14px;
            margin-bottom: 8px;
        }

        .dependency-text {
            flex: 1;
            font-size: 14px;
            margin-bottom: 8px;
        }

        .large-panel-text{
            font-size: 20px;
            width: 400px;
            margin-left: auto;
            margin-bottom: 40px;
            margin-right: auto;
        }

        .launch {
            flex: 1;
            align-self: flex-end;
        }

        .launch-icon {
            height: 20px;
            width: 20px;
        }

        .checkbox {
            flex-shrink: 1;
            display: flex;
            align-self: flex-end;
            cursor: pointer;
        }

        #installed-table {
            display: flex;
            flex: 1;
            flex-direction: column;
            max-width: 909px;
        }

        .table-header {
            flex:1;
            display:flex;
            flex-direction: row;
            border-bottom: 1px solid;
            font-family: 'IBMPlexSans-SemiBold', 'IBM Plex Sans', 'IBMPlexSans', Arial, Helvetica, sans-serif;
            font-size: 14px;
            letter-spacing: 0.16px;
        }

        .header-item {
            flex-shrink: 1;
            min-width: 210px;
            margin: 0 16px 8px 16px;
        }

        .table-row {
            flex: 1;
            display: flex;
            flex-direction: row;
            border-bottom: 1px solid;
        }

        .table-cell {
            flex-shrink: 1;
            min-width: 210px;
            margin: 16px;
        }

        #table-paginator {
            display: flex;
            flex: 1;
            max-width: 909px;
        }

        .pages {
            flex: 1;
            text-align: right;
            padding: 16px 8px 16px 8px;
        }

        .page-back {
            flex-shrink: 1;
            padding: 18px 0 18px 0;
            width: 50px;
            text-align: center;
            font-size: 11px;
            margin: auto;
            border-left: 1px solid;
            cursor: pointer;
        }

        .page-forward {
            flex-shrink: 1;
            padding: 18px 0 18px 0;
            width: 50px;
            text-align: center;
            font-size: 11px;
            margin: auto;
            border-left: 1px solid;
            cursor: pointer;
        }

        .link {
            cursor: pointer;
        }

        #installed-prereqs {
            cursor: pointer;
        }

        #check-finish-button {
            flex-shrink: 1;
            min-width: 240px;
            min-height: 18px;
            font-size: 14px;
            letter-spacing: 0.1px;
            padding: 16px 0px 30px 16px;
            position: fixed;
            cursor: pointer;
            bottom: 0;
            right: 0;
        }

        .large-panel{
            width: 973px;
            max-width: 973px;
            padding: 16px;
            height: 298px;
            margin: 0 3px 3px 0;
            visibility: visible;
            text-align: center;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .celebrate-image{
            height: 132px;
            width: 132px;
            margin-right: auto;
            margin-left: auto;
            background: url(<%= images.celebrateImage %>) no-repeat right center;
        }

        #skip-header {
            margin-top: 16px;
        }

        #skip-box {
            margin-top: 8px;
            padding: 16px;
            max-width: 576px;
            margin-bottom: 24px;
        }

        #skip-check {
            margin-top: 4px;
        }

        .finish {
            background-color: #0062FF;
            color: #FFFFFF;
        }

        .check {
            background-color: #0062FF;
            color: #FFFFFF;
        }

        .tooltip{
            position: relative;
            display: inline-block;
        }

        .tooltip:hover .tooltipText {
            visibility: visible;
        }

        .tooltip .tooltipText {
            visibility: hidden;
            width: 184px;
            padding: 16px;
            position: absolute;
            z-index: 1;
            bottom: 150%;
            left: -65%;
            margin-left: -60px;
            font-size: 12px;
        }

        .tooltip .tooltipText::after {
            content: "";
            position: absolute;
            top: 100%;
            left: 38%;
            margin-left: -5px;
            border-width: 5px;
            border-style: solid;
        }

        .switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #8d8d8d;
            -webkit-transition: .4s;
            transition: .4s;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 3px;
            bottom: 3px;
            background-color: #fff;
            transition: all 70ms ease-out;
        }

        input:checked + .slider {
            background-color: #24a148;
        }

        input:focus + .slider {
            box-shadow: 0 0 1px #24a148;
        }

        input:checked + .slider:before {
            -webkit-transform: translateX(26px);
            -ms-transform: translateX(26px);
            transform: translateX(26px);
            transition: all 70ms ease-out;
        }

        .slider.round {
            border-radius: 34px;
        }

        .slider.round:before {
            border-radius: 50%;
        }

        #toggle-text{
            align-self: center;
            padding-left: 8px;
        }

        /*
        ##############################################
        ### Styling for vscode-dark grouped themes ###
        ##############################################
        */

        body.vscode-dark h1{
            color: #ffffff;
        }

        body.vscode-dark h2 {
            color: #F3F3F3;
        }

        body.vscode-dark {
            color: #F3F3F3;
        }

        body.vscode-dark a{
            color: #6EA6FF;
        }

        body.vscode-dark #installed-table-chevron{
            background: url(<%= images.chevronDark %>) no-repeat right center;
        }

        body.vscode-dark .panel {
            background-color: #202529;
        }

        body.vscode-dark .panel:hover {
            background-color: #2F353A;
        }

        body.vscode-dark .panel-header {

        }

        body.vscode-dark .large-panel {
            background-color: #202529;
        }

        body.vscode-dark .prereq-name {
            color: #F3F3F3;
        }

        body.vscode-dark .required{
            color: #97C1FF;
            background-color: #042FAD;
        }

        body.vscode-dark .optional{
            color: #F2F4F8;
            background-color: #373D42;
        }

        body.vscode-dark .installed-title {
            color: #F3F3F3;
        }

        body.vscode-dark .installed-version {
            color: #BEBEBE;
        }

        body.vscode-dark .required-title {
            color: #F3F3F3;
        }

        body.vscode-dark .checkbox {
            color: #F3F3F3;
        }

        body.vscode-dark .required-version {
            color: #BEBEBE;
        }

        body.vscode-dark .dependency-text {
            color: #BEBEBE;
        }

        body.vscode-dark .large-panel-text {
            color: #BEBEBE;
        }

        body.vscode-dark .launch-icon {
            background: url(<%= images.launchLight %>) no-repeat right center;
        }

        body.vscode-dark .table-header {
            border-color: #373D42;
            color: #F3F3F3;
        }

        body.vscode-dark .table-row {
            border-color: #373D42;
            color: #BEBEBE;
        }

        body.vscode-dark .page-forward{
            background-color: #20252A;
            border-color: #373D42;

        }

        body.vscode-dark .page-back{
            background-color: #20252A;
            border-color: #373D42;
        }

        body.vscode-dark #skip-header {
            color: #FCD04A;
        }

        body.vscode-dark #skip-box {
            border: 1px solid #FCD04A;
        }

        body.vscode-dark .info-icon{
            background: url(<%= images.infoIconDark %>) no-repeat right center;
        }

        body.vscode-dark .tooltipText{
            background-color: #f1f1f1;
            color: #000000;
        }

        body.vscode-dark .tooltip .tooltipText::after {
            border-color: #F1F1F1 transparent transparent transparent;
        }

        /*
        ##############################################
        ### Styling for vscode-light grouped themes ###
        ##############################################
        */

        body.vscode-light a{
            color: #0062FF;
        }

        body.vscode-light h1{
            color: #000000;
        }

        body.vscode-light {
            color: #171717;
            background-color: #FFFFFF;
        }

        body.vscode-light #installed-table-chevron {
            background: url(<%= images.chevronLight %>) no-repeat right center;
        }

        body.vscode-light .panel {
            background-color: #F3F3F3;
        }

        body.vscode-light .panel:hover {
            background-color: #E5E5E5;
        }

        body.vscode-light .panel-header {

        }

        body.vscode-light .large-panel {
            background-color: #F3F3F3;
        }

        body.vscode-light .prereq-name {
            color: #171717;
        }

        body.vscode-light .required{
            color: #054ADA;
            background-color: #C9DEFF;
        }

        body.vscode-light .optional{
            color: #13171A;
            background-color: #D5D9E0;
        }


        body.vscode-light .installed-title {
            color: #171717;
        }

        body.vscode-light .installed-version {
            color: #565656;
        }

        body.vscode-light .required-title {
            color: #171717;
        }

        body.vscode-light .checkbox {
            color: #171717;
        }

        body.vscode-light .required-version {
            color: #565656;
        }

        body.vscode-light .dependency-text {
            color: #565656;
        }

        body.vscode-light .large-panel-text {
            color: #565656;
        }

        body.vscode-light .launch-icon {
            background: url(<%= images.launchDark %>) no-repeat right center;
        }

        body.vscode-light .table-header {
            border-color: #E9E9E9;
            color: #171717;
        }

        body.vscode-light .table-row {
            border-color: #E9E9E9;
            color: #565656;
        }

        body.vscode-light .page-forward{
            background-color: #F3F3F3;
            border-color: #E0E0E0;
        }

        body.vscode-light .page-back{
            background-color: #F3F3F3;
            border-color: #E9E9E9;
        }

        body.vscode-light #skip-header {
            color: #000000;
        }

        body.vscode-light #skip-box {
            border: 1px solid #FFF8E1;
            background-color: #FFF8E1;
        }

        body.vscode-light .info-icon{
            background: url(<%= images.infoIconLight %>) no-repeat right center;
        }

        body.vscode-light .tooltipText{
            background-color: #3d3d3d;
            color: #FFFFFF;
        }

        body.vscode-light .tooltip .tooltipText::after {
            border-color: #3d3d3d transparent transparent transparent;
        }

    </style>
</head>

<body>
    <div id="container">
        <div id="home-title">
            <div id="extension-name-container">
                <h1 id="extension-name">IBM Blockchain Platform</h1>
            </div>
            <div id="extension-version-container">
                <span id="extension-version">v<%= extensionVersion %></span>
            </div>
        </div>
        <div id="content">

            <div id="content-top">
                <div>
                    <h1 id="welcome-title">Let's get you set up...</h1>
                    <p id="welcome-sub-text">
                        You will need the following installed in order to use the extension.
                        Click any un-installed apps to visit their install instructions.
                        Click "check again" when you’ve got everything installed.
                    </p>
                    <br>
                    <br>
                    <div class="optional-features-container">
                        <div class="optional-features-title">Optional Features</div>
                    </div>
                    <div class="optional-features-container">
                        <div class="optional-feature">
                            <div class="optional-docker-description">
                                This extension can use Docker and Docker Compose to run a simple pre-configured local Hyperledger Fabric network on your local machine.
                                You may disable this feature if you cannot run Docker on this machine, or if you only want to import your own Fabric network for development.
                            </div>
                            <div class="feature-name">Enable Local Fabric</div>
                            <div class="switch-container">
                                <label class="switch switch-button">
                                    <input id="local-fabric-functionality" type="checkbox" onclick="toggleLocalFabric();" <%if(localFabricFunctionality){ %>
                                    checked
                                    <% } %>
                                    >
                                    <span class="slider round"></span>
                                </label>
                                <div id="toggle-text"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="content-middle">
                <div class="prereqs-header">
                    <div class="prereqs-title-container">
                        <div class="prereqs-title">Missing prerequisites</div>
                    </div>
                    <div class="prereqs-number-container">
                        <span class="prereqs-number">(<%=missingPrerequisitesLength%>)</span>
                    </div>
                </div>

                <div id="prereqs-gallery">
                    <% if(isComplete){ %>
                    <div id="complete-panel" class="large-panel">
                    <% } else { %>
                    <div id="complete-panel" class="large-panel hidden">
                    <% } %>
                        <div class="large-panel-text">All prerequisites installed - your development environment is ready to use!
                        <br>Get started with some <a class="link" onclick="finish();" title="Open Home Page">tutorials and samples</a>
                        </div>
                        <div class="celebrate-image"></div>
                    </div>

                    <% for(const dependency of Object.keys(missingDependencies)){ %>
                        <% if(missingDependencies[dependency].checkbox && missingDependencies[dependency].complete === false){ %>
                        <label class="checkbox-text">
                            <a class="panel" title="<%= missingDependencies[dependency].name%>">

                                <div class="panel-header">
                                    <div class="prereq-name">
                                        <%= missingDependencies[dependency].name %>
                                        <% if(missingDependencies[dependency].tooltip){ %>
                                        <div class="info-icon tooltip">
                                            <span class="tooltipText">
                                                <b><%= missingDependencies[dependency].name %></b>
                                                <br><br>
                                                <%= missingDependencies[dependency].tooltip %>
                                            </span>
                                        </div>
                                        <%}%>
                                    </div>
                                    <% if(missingDependencies[dependency].required){ %>
                                        <div class="prereq-required required">Required</div>
                                    <% } else { %>
                                        <div class="prereq-required optional">Optional</div>
                                    <% } %>
                                </div>
                                <div class="dependency-text">
                                    <%= missingDependencies[dependency].text %>
                                </div>
                                <div class="checkbox">
                                    <input id="<%= missingDependencies[dependency].id %>" type="checkbox" name="<%= missingDependencies[dependency].name %>" value="true"> I confirm</input>
                                </div>

                            </a>
                        </label>
                        <% } else { %>
                        <a href="<%= missingDependencies[dependency].url %>" class="panel" title="<%= missingDependencies[dependency].name%>">
                            <div class="panel-header">
                                <div class="prereq-name">
                                    <div class="name"><%= missingDependencies[dependency].name %></div>
                                    <% if(missingDependencies[dependency].tooltip){ %>
                                    <div class="info-icon tooltip">
                                        <span class="tooltipText">
                                            <b><%= missingDependencies[dependency].name %></b>
                                            <br><br>
                                            <%= missingDependencies[dependency].tooltip %>
                                        </span>
                                    </div>
                                    <%}%>
                                </div>
                                <% if(missingDependencies[dependency].required){ %>
                                    <div class="prereq-required required">Required</div>
                                <% } else { %>
                                    <div class="prereq-required optional">Optional</div>
                                <% } %>
                            </div>
                            <div class="installed-title">Installed<% if(missingDependencies[dependency].name != 'System Requirements') { %> version <% } %></div>
                            <div class="installed-version">
                                <% if(missingDependencies[dependency].version){ %>
                                    <%= missingDependencies[dependency].version %>
                                    <% if(missingDependencies[dependency].name == 'System Requirements') { %> GB of RAM <% } %>
                                <% } else { %>
                                    -
                                <% } %>
                            </div>
                            <div class="required-title">Required<% if(missingDependencies[dependency].name != 'System Requirements') { %> version <% } %></div>
                            <div class="required-version">
                                <% if(missingDependencies[dependency].requiredVersion) { %>
                                    <%= missingDependencies[dependency].requiredVersion %> <%= missingDependencies[dependency].requiredLabel%>
                                <% } else if (missingDependencies[dependency].name == 'System Requirements') { %>
                                    4 GB of RAM
                                <% } else { %>
                                    any
                                <% } %>
                            </div>
                            <% if(missingDependencies[dependency].name != 'System Requirements'){ %>
                                <div class="launch">
                                    <div class="launch-icon"></div>
                                </div>
                            <% } %>
                        </a>
                        <% } %>
                    <% } %>
                </div>

            </div>

            <div id="content-bottom">
                <div id="installed-prereqs" class="prereqs-header" onclick="toggleCollapsibleTable();">
                    <div class="prereqs-title-container">
                        <div class="prereqs-title">Prerequisites already installed</div>
                    </div>
                    <div class="prereqs-number-container">
                        <span class="prereqs-number">(<%=Object.keys(installedDependencies).length%>)</span>
                    </div>
                    <div id="installed-table-chevron"></div>

                </div>

                <div id="installed-table">


                    <div class="table-header">
                        <div class="header-item">Name</div>
                        <div class="header-item">Version</div>
                    </div>


                    <div id="installedPrereqs"></div>

                </div>

                <div id="table-paginator">
                    <div class="pages">Page <span id="currentPage"></span> of <span id="totalPages"><%= Math.ceil(Object.keys(installedDependencies).length / 4) %></span></div>
                    <div class="page-back" onclick="previousPage();">&#9668</div>
                    <div class="page-forward" onclick="nextPage();">&#9658</div>
                </div>

                <div id="skip-header">Important</div>
                <div id="skip-box">
                    The extension will not work correctly without the prerequisites installed.
                    If you are having problems, you can try skipping this step, but please also raise an issue on GitHub so we know what went wrong.

                    <br>
                    <br>

                    <a class="link" id="skip-check" onclick="skip();" title="Skip prerequisite check">Skip prerequisite check</a>
                </div>

                <% if(isComplete){ %>
                    <div id="check-finish-button" class="finish" onclick="finish();">Let's Blockchain!</div>
                <% } else { %>
                    <div id="check-finish-button" class="check" onclick="check();">Check again</div>
                <% } %>


            </div>
        </div>
    </div>
    <script>
        const vscode = acquireVsCodeApi();


        const rowsPerPage = 4;
        const totalPages = document.getElementById('totalPages').innerHTML;

        const installedDependencies = <%- JSON.stringify(installedDependencies); %>;
        const missingDependencies = <%- JSON.stringify(missingDependencies); %>;

        let pages = [];

        for (index = 0; index < Object.keys(installedDependencies).length; index += rowsPerPage) {

            let page = Array.prototype.slice.call(Object.values(installedDependencies), index, index+rowsPerPage);
            pages.push(page);
        }

        let pageDisplayedIndex = 0;
        document.getElementById('currentPage').innerHTML = pageDisplayedIndex + 1;

        let pageDisplayed = pages[pageDisplayedIndex];

        refreshTable(pageDisplayed);


        let localFabricFunctionality = document.getElementById('local-fabric-functionality');
        updateLocalFabricText(localFabricFunctionality.checked);

        function toggleCollapsibleTable(){
            if(document.getElementById('installed-table').classList.contains('hidden')){
                document.getElementById('installed-table-chevron').style.transform = "";
            } else {
                document.getElementById('installed-table-chevron').style.transform = "rotate(180deg)";
            }

            document.getElementById('installed-table').classList.toggle('hidden');
            document.getElementById('table-paginator').classList.toggle('hidden');
        }

        function previousPage(){
            let currentPage = document.getElementById('currentPage').innerHTML;
            if(currentPage - 1 == 0){
                // Cannot go past Page 1
                return;
            }

            pageDisplayedIndex = pageDisplayedIndex - 1;
            document.getElementById('currentPage').innerHTML = pageDisplayedIndex + 1;

            pageDisplayed = pages[pageDisplayedIndex]

            refreshTable(pageDisplayed);

        }

        function nextPage(){
            let currentPage = document.getElementById('currentPage').innerHTML;

            if(currentPage + 1 >= totalPages){
                // Cannot go past the total number of pages
                return;
            }

            pageDisplayedIndex = pageDisplayedIndex + 1;
            document.getElementById('currentPage').innerHTML = pageDisplayedIndex + 1;

            pageDisplayed = pages[pageDisplayedIndex]
            refreshTable(pageDisplayed);

        }

        function refreshTable(pageDisplayed){
            let table = '';

            for(let x=0;x<pageDisplayed.length;x++){
                table += `
                <div class="table-row">
                    <div class="table-cell">${pageDisplayed[x].name}</div>
                `;

                if(pageDisplayed[x].version && pageDisplayed[x].name !== 'System Requirements'){
                    table += `
                    <div class="table-cell">${pageDisplayed[x].version}</div>`;
                } else if(pageDisplayed[x].name === 'Docker for Windows' && pageDisplayed[x].complete){
                    table += `
                    <div class="table-cell">Configured to use Linux containers</div>`;
                } else if(pageDisplayed[x].name === 'System Requirements' && pageDisplayed[x].complete){
                    table += `
                    <div class="table-cell">System has at least 4GB RAM</div>`;
                }

                table += `</div>`;

            }

            document.getElementById('installedPrereqs').innerHTML = table;
        }

        function check(){
            // Checking dependencies again
            let localFabricFunctionality = document.getElementById('local-fabric-functionality');

            let checkObject = {
                command: 'check',
                localFabricFunctionality: localFabricFunctionality.checked
            };

            if(document.getElementById('dockerForWindows')){
                if(document.getElementById('dockerForWindows').checked === true){
                    checkObject['dockerForWindows'] = true;
                }
            }

            if(document.getElementById('systemRequirements')){
                if(document.getElementById('systemRequirements').checked === true){
                    checkObject['systemRequirements'] = true;
                }
            }

            vscode.postMessage((checkObject));

        }

        function updateLocalFabricText(isLocalFunctionalityEnabled){
            if(isLocalFunctionalityEnabled){
                document.getElementById('toggle-text').innerHTML = 'On';
            } else {
                document.getElementById('toggle-text').innerHTML = 'Off';
            }
        }

        function toggleLocalFabric(){
            let localFabricFunctionality = document.getElementById('local-fabric-functionality');

            updateLocalFabricText(localFabricFunctionality.checked);

            vscode.postMessage({
                command: 'check',
                localFabricFunctionality: localFabricFunctionality.checked,
                toggle: 'true'
            });
        }

        function finish(){
            // All required dependencies installed
            let localFabricFunctionality = document.getElementById('local-fabric-functionality');

            vscode.postMessage({
                command: 'finish',
                localFabricFunctionality: localFabricFunctionality.checked
            })
        }

        function skip(){
            // Skip prerequisites
            let localFabricFunctionality = document.getElementById('local-fabric-functionality');

            vscode.postMessage({
                command: 'skip',
                localFabricFunctionality: localFabricFunctionality.checked
            })
        }

    </script>
</body>
</html>
